<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scala | Hi there, I'm Michal]]></title>
  <link href="http://mostr.github.com/blog/categories/scala/atom.xml" rel="self"/>
  <link href="http://mostr.github.com/"/>
  <updated>2015-05-22T08:23:12+02:00</updated>
  <id>http://mostr.github.com/</id>
  <author>
    <name><![CDATA[Michal Ostruszka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scala case classes to and from tuples]]></title>
    <link href="http://mostr.github.com/blog/2015/03/30/scala-case-classes-to-and-from-tuples/"/>
    <updated>2015-03-30T18:53:00+02:00</updated>
    <id>http://mostr.github.com/blog/2015/03/30/scala-case-classes-to-and-from-tuples</id>
    <content type="html"><![CDATA[<p>This one is going to be pretty quick and it's more like note to self, but maybe some of you find if helpful too.</p>

<p>Have you ever had to convert between case classes and tuples in your Scala code? It's not something you do every day, all day long but it happens to me from time to time. The worst thing here is I constantly keep forgetting how to do <strong>exactly</strong> this dance and have to look for it in APIs or fallback to Google/Stack Overflow for that. So without further ado, let's go to the codes.</p>

<p>There is <code>User</code> case class defined as follows</p>

<p><code>scala
case class User(name: String, email: String, age: Int)
</code></p>

<p>Say you have a tuple that "looks like" <code>User</code>'s parameters list. It'd be nice to be able to use <code>User.apply</code> on it, wouldn't it?</p>

<p>``` scala
// this is regular Tuple3
val userLikeData = ("John", "john@doe.com", 33)</p>

<p>val user = (User.apply _).tupled(userLikeData)
// => User("John", "john@doe.com", 33)
```</p>

<p>In short it takes <code>User.apply</code> as a function first. On every function (here of type <code>Function3</code>) you can invoke <code>tupled</code> to convert its parameters list to corresponding tuple type. Because it's all about <code>Function</code> the example above can also be written as:</p>

<p><code>scala
Function.tupled(User.apply _)(userLikeData)
</code></p>

<p>or even simpler:</p>

<p>``` scala
User.tupled(userLikeData)</p>

<p>// if companion object exists it must extend FunctionX
object User extends Function3[String, String, Int, User]
```</p>

<p>This one is possible only in two cases: either if <code>User</code> doesn't have companion object or if its companion object extends appropriate <code>FunctionX</code>. Big thanks to <a href="http://twitter.com/kpciesielski">@kpciesielski</a> and <a href="https://twitter.com/marcin_kubala">@marcin_kubala</a> for letting me know about this option.</p>

<p>Ok, let's get tuple back out of already created case class instance.</p>

<p>``` scala
// this is regular User
val user = User("John", "john@doe.com", 33)</p>

<p>User.unapply(user).get
// => ("John", "john@doe.com", 33)
```</p>

<p>And that's it. Case classes have <code>unapply</code> which returns <code>Option</code> with tuple inside. Just <code>get</code> from this option to receive plain tuple with user's data.</p>

<h2>Bonus points - real classes</h2>

<p>Is above possible with regular classes (not case classes) too? Let's see</p>

<p><code>scala
class Address(city: String, street: String, number: Int)
</code></p>

<p>We don't have any <code>apply</code> here to use (it's not real function), but there is good ol' partial application that we can use:</p>

<p><code>scala
val addressCtorFn = new Address(_, _, _)
// =&gt; (String, String, Int) =&gt; Address
</code></p>

<p>Now we have a function which basically works like <code>Address</code> constructor and already know what to do with it:</p>

<p><code>scala
Function.tupled(addressCtorFn)
// =&gt; ((String, String, Int)) =&gt; Address
// or simply
addressCtorFn.tupled
// =&gt; ((String, String, Int)) =&gt; Address
</code></p>

<p>And done, now you can build regular <code>Address</code> classes out of tuples (if they match, obviously).</p>

<p>There is no way (at least at my current Scala-fu level) that would allow getting tuples back from regular classes. If it is somehow possible and you know the right lines, just drop me a comment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scalaval - dead simple Scala validation micro library]]></title>
    <link href="http://mostr.github.com/blog/2014/07/23/scalaval-simple-scala-validation/"/>
    <updated>2014-07-23T08:31:00+02:00</updated>
    <id>http://mostr.github.com/blog/2014/07/23/scalaval-simple-scala-validation</id>
    <content type="html"><![CDATA[<p>I'm big fan of what I call "lego approach" in software development. It means building project stack using many but small and focused libraries or frameworks where I can tweak every aspect of this project stack. I prefer this over full blown "platforms" which give you everything you <em>may</em> need together with tons of complexity and time required to learn stuff. This "micro libraries" approach is strong in JavaScript, especially node.js community as there are tons of npm modules that are really tiny and do one specific thing so you can compose your stack with number of such modules. The same thing is emerging in Ruby ecosystem, see <a href="http://microrb.com/">microrb.com</a>.</p>

<p>I'm not sure yet how it is in Scala, but it just got one more, new micro library authored by me. This one is called <a href="http://github.com/mostr/scalaval">ScalaVal</a> and aims to help you writing validation in your application. Project's README answers "Why" question pretty well, I think:</p>

<blockquote><p>Because every project bigger than HelloWorldApp requires data validation at some point. Reinventing the structure and validation handling boilerplate every time you need one is definitely not something developers enjoy. I too had this pain when hacking on <a href="http://codebrag.com">Codebrag</a>.</p>

<p>This small utility aims to provide minimal framework to write your validation logic, act as a guard between data and action and collect results in unified way. That's all it does. And it's really, really tiny. No external dependencies and no magic included. Just boilerplate.</p></blockquote>

<p>ScalaVal was just released to Maven Central in 0.1 version and works with Scala 2.10+. For usage examples please consult <a href="http://github.com/mostr/scalaval">projects README</a>, or (even better) see <a href="https://github.com/mostr/scalaval/tree/master/src/test/scala/com/softwaremill/scalaval">project's specs</a>.</p>

<p>Entire source code is one, quite small source file (there is way more test code there). It may look silly to release something like this as full blown open source project, but as I said - I'm in love with micro-libraries approach and I really appreciate that I can take small library like this and it solves me exactly one issue in my project - specifically data validation in this case.</p>

<p>It's my first scala open source thing so I'm pretty excited even if it's just few lines of code. In case you spot any issue PRs are welcome, as well as comments and other ideas.</p>
]]></content>
  </entry>
  
</feed>
